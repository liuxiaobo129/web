pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'web-app:latest'
        DOCKER_REGISTRY = 'lxb631'
        K8S_DEPLOYMENT = 'web-app-deployment'
        K8S_SERVICE = 'web-app-service'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    // 使用 GitHub 凭据来克隆私有仓库
                    withCredentials([usernamePassword(credentialsId: '12946056621', usernameVariable: 'GITHUB_USERNAME', passwordVariable: 'GITHUB_TOKEN')]) {
                        // 使用凭据中的 GITHUB_USERNAME 和 GITHUB_TOKEN 进行 git clone
                        sh "git clone https://github.com/liuxiaobo129/web.git"
                    }
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    // 构建 Docker 镜像
                    sh '/usr/bin/docker build -t $DOCKER_IMAGE .'
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    // 1、登录 Docker Hub 并推送镜像；

                    sh 'docker tag $DOCKER_IMAGE $DOCKER_REGISTRY/$DOCKER_IMAGE'
                    sh 'docker push $DOCKER_REGISTRY/$DOCKER_IMAGE'
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // 更新 Kubernetes Deployment
                    sh 'kubectl set image deployment/$K8S_DEPLOYMENT web-app=$DOCKER_REGISTRY/$DOCKER_IMAGE --record'
                    sh 'kubectl rollout status deployment/$K8S_DEPLOYMENT'
                }
            }
        }
        // 插件
         stage('Deploy to Kubernetes') {
                    steps {
                        script {
                            // 使用 Kubernetes CLI 插件进行部署
                            kubernetesDeploy(configs: 'k8s-deployment.yaml', kubeconfigId: 'kubeconfig-id', enableConfigSubstitution: true)
                        }
                    }
                }
    }
}